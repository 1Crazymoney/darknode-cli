
variable "name" {
  default = "{{.Name}}"
}

variable "project" {
  default = "{{.Project}}"
}

variable "zone" {
  default = "{{.Zone}}"
}

variable "address" {
  default = "{{.Address}}"
}

variable "machine_type" {
  default = "{{.MachineType}}"
}

variable "credential_file" {
  default = "{{.Credentials}}"
}

provider "google" {
  credentials = "${file("${var.credential_file}")}"
  project     = "${var.project}"
  zone        = "${var.zone}"
}

output "instance_ip" {
  description = "The gce instance id"
  value       = "${google_compute_instance.darknode_vm.network_interface.0.access_config.0.nat_ip}"
}

#output "multiaddress" {
#  value = "/ip4/${aws_instance.darknode.public_ip}/tcp/18514/republic/${var.address}"
#}

/*******************
**** NETWORKING ****
*******************/

resource "google_compute_network" "darknode_network" {
  name = "darknode-network"
}

resource "google_compute_firewall" "darknode_ping" {
  network     = "${google_compute_network.darknode_network.name}"
  name        = "darknode-ping"
  description = "Allow inbound PING traffic"

  allow {
    protocol = "icmp"
  }

  source_ranges = ["0.0.0.0/0"]
  target_tags   = ["darknode"]
}

resource "google_compute_firewall" "darknode_ssh" {
  network     = "${google_compute_network.darknode_network.name}"
  name        = "darknode-ssh"
  description = "Allow inbound SSH traffic"

  allow {
    protocol = "tcp"
    ports    = ["22"]
  }

  source_ranges = ["0.0.0.0/0"]
  target_tags   = ["darknode"]
}

resource "google_compute_firewall" "darknode_republic_protocol" {
  network     = "${google_compute_network.darknode_network.name}"
  name        = "darknode-republic-protocol"
  description = "Allow inbound Republic Protocol traffic"

  allow {
    protocol = "tcp"
    ports    = ["18514-18515"]
  }

  source_ranges = ["0.0.0.0/0"]
  target_tags   = ["darknode"]
}

resource "google_compute_address" "darkode_public_ip" {
  name = "darknode-public-ip"
}

/***********
**** VM ****
************/

data "google_compute_image" "base_image" {
  family  = "ubuntu-1804-lts"
  project = "ubuntu-os-cloud"
}

resource "google_compute_disk" "darknode_disk" {
  name  = "darknode-disk"
  image = "${data.google_compute_image.base_image.self_link}"
  size  = 100
  type  = "pd-ssd"
}

#import VM
resource "google_compute_instance" "darknode_vm" {
  name         = "${var.name}"
  machine_type = "${var.machine_type}"
  #disable during dev - prevents easy iterations
  #deletion_protection = true

  metadata_startup_script = "echo 'hello' > test.txt"

  boot_disk {
    source = "${google_compute_disk.darknode_disk.self_link}"
  }

  scheduling {
    automatic_restart   = true
    on_host_maintenance = "MIGRATE"
  }

  network_interface {
    network = "${google_compute_network.darknode_network.name}"
    access_config {
      nat_ip = "${google_compute_address.darkode_public_ip.address}"

    }
  }

  service_account {
    scopes = ["service-control", "service-management", "storage-ro", "trace-append", "monitoring-write", "logging-write"]
  }

  tags = ["darknode"]
}
