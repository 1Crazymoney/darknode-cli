# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2.1

orbs:
    aws-s3: circleci/aws-s3@1.0.11

_defaults: &defaults
    docker:
        - image: techknowlogick/xgo:latest

commands:
    cross_compile:
        description: "Cross compile binaries for different os and archs"
        steps:
            - run:
                  name: Build binaries
                  command: |
                      cd cmd
                      go build -o darknode .
                      mv darknode ../artifacts/darknode_linux_amd64
                      env GOOS=linux CGO_ENABLED=1 CC=aarch64-linux-gnu-gcc-6 CXX=aarch64-linux-gnu-g++-6 GOARCH=arm64 go build -o darknode .
                      mv darknode ../artifacts/darknode_linux_arm
                      env GOOS=darwin CGO_ENABLED=1 CC=o64-clang CXX=o64-clang++ GOARCH=amd64 go build -o darknode .
                      mv darknode ../artifacts/darknode_darwin_amd64
    release:
        description: "Publish a new release"
        steps:
            - run:
                  name: Publish release to github
                  command: |
                      wget https://github.com/tcnksm/ghr/releases/download/v0.13.0/ghr_v0.13.0_linux_amd64.tar.gz
                      tar xvzf ghr_v0.13.0_linux_amd64.tar.gz
                      mv ghr_v0.13.0_linux_amd64/ghr ghr
                      ./ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete 3.0.3 ./artifacts/
    test_env:
        description: "Push the binaries to aws s3, so that we can test before releasing."
        steps:
            - run:
                  name: install AWS CLI
                  command: |
                      apt-get -y install python3
                      apt -y install python-pip python-dev
                      pip install awscli
            - aws-s3/sync:
                  from: ./artifacts
                  to: 's3://releases.republicprotocol.com/darknode-cli/temp/'
                  arguments: '--acl public-read'
                  overwrite: true

jobs:
    deployment:
        <<: *defaults
        steps:
            - checkout
            - run:
                  name: install tools
                  command: |
                      go vet ./...
            - cross_compile
            - release
    test:
        <<: *defaults
        steps:
            - checkout
            - run:
                  name: install tools
                  command: |
                      go vet ./...
            - cross_compile
            - test_env

workflows:
    version: 2.1
    deployment:
        jobs:
            - deployment:
                  filters:
                      branches:
                          only:
                              - master
            - test:
                  filters:
                      branches:
                          ignore:
                              - master